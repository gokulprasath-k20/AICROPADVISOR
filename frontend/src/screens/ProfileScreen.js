import React, { useState } from 'react';
import {
  View,
  Text,
  ScrollView,
  StyleSheet,
  Alert,
  Dimensions,
} from 'react-native';
import {
  Card,
  Title,
  Avatar,
  List,
  Switch,
  Button,
  Divider,
  Surface,
} from 'react-native-paper';
import { LinearGradient } from 'expo-linear-gradient';
import { Ionicons } from '@expo/vector-icons';
import { theme, gradients } from '../theme/theme';

const { width } = Dimensions.get('window');

const ProfileScreen = ({ navigation }) => {
  const [notifications, setNotifications] = useState(true);
  const [voiceInput, setVoiceInput] = useState(true);
  const [offlineMode, setOfflineMode] = useState(false);
  const [language, setLanguage] = useState('hindi');

  const userProfile = {
    name: '‡§∞‡§æ‡§Æ ‡§ï‡•Å‡§Æ‡§æ‡§∞',
    phone: '+91 98765 43210',
    district: '‡§∞‡§æ‡§Ç‡§ö‡•Ä',
    farmSize: '2.5 ‡§è‡§ï‡§°‡§º',
    primaryCrops: ['‡§ß‡§æ‡§®', '‡§ó‡•á‡§π‡•Ç‡§Ç', '‡§Æ‡§ï‡•ç‡§ï‡§æ'],
    experience: '15 ‡§∏‡§æ‡§≤',
  };

  const handleLanguageChange = () => {
    Alert.alert(
      '‡§≠‡§æ‡§∑‡§æ ‡§¨‡§¶‡§≤‡•á‡§Ç',
      '‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡•Ä ‡§™‡§∏‡§Ç‡§¶‡•Ä‡§¶‡§æ ‡§≠‡§æ‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç',
      [
        { text: '‡§π‡§ø‡§Ç‡§¶‡•Ä', onPress: () => setLanguage('hindi') },
        { text: 'English', onPress: () => setLanguage('english') },
        { text: '‡§∏‡§Ç‡§•‡§æ‡§≤‡•Ä', onPress: () => setLanguage('santhali') },
        { text: '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç', style: 'cancel' },
      ]
    );
  };

  const handleLogout = () => {
    Alert.alert(
      '‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü',
      '‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§µ‡§æ‡§ï‡§à ‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?',
      [
        { text: '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç', style: 'cancel' },
        { text: '‡§π‡§æ‡§Ç', onPress: () => console.log('Logged out') },
      ]
    );
  };

  const profileStats = [
    { label: '‡§ï‡•Å‡§≤ ‡§∏‡•Å‡§ù‡§æ‡§µ', value: '47', icon: 'leaf', color: '#4CAF50' },
    { label: '‡§∏‡§´‡§≤ ‡§´‡§∏‡§≤‡•á‡§Ç', value: '23', icon: 'checkmark-circle', color: '#2196F3' },
    { label: '‡§¨‡§ö‡§§', value: '‚Çπ15,000', icon: 'trending-up', color: '#FF9800' },
  ];

  return (
    <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>
      {/* Profile Header */}
      <LinearGradient colors={gradients.primary} style={styles.header}>
        <Avatar.Text
          size={80}
          label="‡§∞‡§ï"
          style={styles.avatar}
          labelStyle={{ fontSize: 24, color: theme.colors.primary }}
        />
        <Text style={styles.userName}>{userProfile.name}</Text>
        <Text style={styles.userLocation}>
          üìç {userProfile.district}, ‡§ù‡§æ‡§∞‡§ñ‡§Ç‡§°
        </Text>
        <Text style={styles.userPhone}>üìû {userProfile.phone}</Text>
      </LinearGradient>

      {/* Profile Stats */}
      <View style={styles.statsContainer}>
        {profileStats.map((stat, index) => (
          <Surface key={index} style={styles.statCard}>
            <Ionicons name={stat.icon} size={24} color={stat.color} />
            <Text style={styles.statValue}>{stat.value}</Text>
            <Text style={styles.statLabel}>{stat.label}</Text>
          </Surface>
        ))}
      </View>

      {/* Farm Information */}
      <View style={styles.section}>
        <Title style={styles.sectionTitle}>‡§ñ‡•á‡§§ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä</Title>
        <Card style={styles.infoCard}>
          <Card.Content>
            <View style={styles.infoRow}>
              <Ionicons name="resize" size={20} color="#4CAF50" />
              <Text style={styles.infoLabel}>‡§ñ‡•á‡§§ ‡§ï‡§æ ‡§Ü‡§ï‡§æ‡§∞:</Text>
              <Text style={styles.infoValue}>{userProfile.farmSize}</Text>
            </View>
            
            <View style={styles.infoRow}>
              <Ionicons name="time" size={20} color="#FF9800" />
              <Text style={styles.infoLabel}>‡§Ö‡§®‡•Å‡§≠‡§µ:</Text>
              <Text style={styles.infoValue}>{userProfile.experience}</Text>
            </View>
            
            <View style={styles.infoRow}>
              <Ionicons name="leaf" size={20} color="#2196F3" />
              <Text style={styles.infoLabel}>‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§´‡§∏‡§≤‡•á‡§Ç:</Text>
              <Text style={styles.infoValue}>
                {userProfile.primaryCrops.join(', ')}
              </Text>
            </View>
          </Card.Content>
        </Card>
      </View>

      {/* Settings */}
      <View style={styles.section}>
        <Title style={styles.sectionTitle}>‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏</Title>
        <Card style={styles.settingsCard}>
          <List.Item
            title="‡§∏‡•Ç‡§ö‡§®‡§æ‡§è‡§Ç"
            description="‡§´‡§∏‡§≤ ‡§î‡§∞ ‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•Ä ‡§Ö‡§≤‡§∞‡•ç‡§ü"
            left={props => <List.Icon {...props} icon="bell" color="#FF9800" />}
            right={() => (
              <Switch
                value={notifications}
                onValueChange={setNotifications}
                color={theme.colors.primary}
              />
            )}
          />
          
          <Divider />
          
          <List.Item
            title="‡§Ü‡§µ‡§æ‡§ú ‡§á‡§®‡§™‡•Å‡§ü"
            description="‡§¨‡•ã‡§≤‡§ï‡§∞ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§¶‡•á‡§Ç"
            left={props => <List.Icon {...props} icon="microphone" color="#2196F3" />}
            right={() => (
              <Switch
                value={voiceInput}
                onValueChange={setVoiceInput}
                color={theme.colors.primary}
              />
            )}
          />
          
          <Divider />
          
          <List.Item
            title="‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§Æ‡•ã‡§°"
            description="‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§ï‡•á ‡§¨‡§ø‡§®‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó"
            left={props => <List.Icon {...props} icon="cloud-offline" color="#9C27B0" />}
            right={() => (
              <Switch
                value={offlineMode}
                onValueChange={setOfflineMode}
                color={theme.colors.primary}
              />
            )}
          />
          
          <Divider />
          
          <List.Item
            title="‡§≠‡§æ‡§∑‡§æ"
            description={language === 'hindi' ? '‡§π‡§ø‡§Ç‡§¶‡•Ä' : language === 'english' ? 'English' : '‡§∏‡§Ç‡§•‡§æ‡§≤‡•Ä'}
            left={props => <List.Icon {...props} icon="translate" color="#4CAF50" />}
            right={props => <List.Icon {...props} icon="chevron-right" />}
            onPress={handleLanguageChange}
          />
        </Card>
      </View>

      {/* App Information */}
      <View style={styles.section}>
        <Title style={styles.sectionTitle}>‡§ê‡§™ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä</Title>
        <Card style={styles.infoCard}>
          <List.Item
            title="‡§∏‡§π‡§æ‡§Ø‡§§‡§æ"
            description="‡§â‡§™‡§Ø‡•ã‡§ó ‡§ó‡§æ‡§á‡§° ‡§î‡§∞ FAQ"
            left={props => <List.Icon {...props} icon="help-circle" color="#2196F3" />}
            right={props => <List.Icon {...props} icon="chevron-right" />}
            onPress={() => Alert.alert('‡§∏‡§π‡§æ‡§Ø‡§§‡§æ', '‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§™‡•á‡§ú ‡§ú‡§≤‡•ç‡§¶ ‡§π‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•ã‡§ó‡§æ')}
          />
          
          <Divider />
          
          <List.Item
            title="‡§´‡•Ä‡§°‡§¨‡•à‡§ï"
            description="‡§Ö‡§™‡§®‡•Ä ‡§∞‡§æ‡§Ø ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡•á‡§Ç"
            left={props => <List.Icon {...props} icon="message" color="#FF9800" />}
            right={props => <List.Icon {...props} icon="chevron-right" />}
            onPress={() => Alert.alert('‡§´‡•Ä‡§°‡§¨‡•à‡§ï', '‡§´‡•Ä‡§°‡§¨‡•à‡§ï ‡§´‡•â‡§∞‡•ç‡§Æ ‡§ú‡§≤‡•ç‡§¶ ‡§π‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•ã‡§ó‡§æ')}
          />
          
          <Divider />
          
          <List.Item
            title="‡§ê‡§™ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç"
            description="‡§∏‡§Ç‡§∏‡•ç‡§ï‡§∞‡§£ 1.0.0"
            left={props => <List.Icon {...props} icon="information" color="#9C27B0" />}
            right={props => <List.Icon {...props} icon="chevron-right" />}
            onPress={() => Alert.alert(
              '‡§ï‡§ø‡§∏‡§æ‡§® ‡§Æ‡§ø‡§§‡•ç‡§∞',
              'Smart India Hackathon 2025\n‡§ù‡§æ‡§∞‡§ñ‡§Ç‡§° ‡§ï‡•É‡§∑‡§ø ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§ê‡§™\n‡§∏‡§Ç‡§∏‡•ç‡§ï‡§∞‡§£: 1.0.0\n\n‡§µ‡§ø‡§ï‡§∏‡§ø‡§§: AI ‡§ü‡•Ä‡§Æ'
            )}
          />
        </Card>
      </View>

      {/* Emergency Contacts */}
      <View style={styles.section}>
        <Title style={styles.sectionTitle}>‡§Ü‡§™‡§æ‡§§‡§ï‡§æ‡§≤‡•Ä‡§® ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï</Title>
        <Card style={styles.emergencyCard}>
          <Card.Content>
            <View style={styles.emergencyItem}>
              <Ionicons name="call" size={20} color="#4CAF50" />
              <View style={styles.emergencyText}>
                <Text style={styles.emergencyTitle}>‡§ï‡•É‡§∑‡§ø ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§®</Text>
                <Text style={styles.emergencyNumber}>1800-180-1551</Text>
              </View>
              <Button
                mode="outlined"
                compact
                onPress={() => Alert.alert('‡§ï‡•â‡§≤', '‡§ï‡•É‡§∑‡§ø ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§® ‡§™‡§∞ ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç?')}
              >
                ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç
              </Button>
            </View>
            
            <Divider style={styles.emergencyDivider} />
            
            <View style={styles.emergencyItem}>
              <Ionicons name="medical" size={20} color="#F44336" />
              <View style={styles.emergencyText}>
                <Text style={styles.emergencyTitle}>‡§™‡§∂‡•Å ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ</Text>
                <Text style={styles.emergencyNumber}>1800-11-2266</Text>
              </View>
              <Button
                mode="outlined"
                compact
                onPress={() => Alert.alert('‡§ï‡•â‡§≤', '‡§™‡§∂‡•Å ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§® ‡§™‡§∞ ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç?')}
              >
                ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç
              </Button>
            </View>
          </Card.Content>
        </Card>
      </View>

      {/* Logout Button */}
      <View style={styles.section}>
        <Button
          mode="contained"
          onPress={handleLogout}
          style={styles.logoutButton}
          contentStyle={styles.logoutButtonContent}
          buttonColor="#F44336"
        >
          ‡§≤‡•â‡§ó ‡§Ü‡§â‡§ü
        </Button>
      </View>

      <View style={{ height: 20 }} />
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: theme.colors.background,
  },
  header: {
    padding: 30,
    alignItems: 'center',
    borderBottomLeftRadius: 25,
    borderBottomRightRadius: 25,
  },
  avatar: {
    backgroundColor: '#fff',
    marginBottom: 15,
  },
  userName: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#fff',
    marginBottom: 5,
  },
  userLocation: {
    fontSize: 16,
    color: '#fff',
    opacity: 0.9,
    marginBottom: 5,
  },
  userPhone: {
    fontSize: 14,
    color: '#fff',
    opacity: 0.8,
  },
  statsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    padding: 20,
    marginTop: -20,
  },
  statCard: {
    alignItems: 'center',
    padding: 15,
    borderRadius: 10,
    elevation: 3,
    flex: 1,
    marginHorizontal: 5,
  },
  statValue: {
    fontSize: 20,
    fontWeight: 'bold',
    color: theme.colors.text,
    marginTop: 8,
  },
  statLabel: {
    fontSize: 12,
    color: theme.colors.text,
    marginTop: 4,
    textAlign: 'center',
  },
  section: {
    padding: 20,
  },
  sectionTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: theme.colors.text,
    marginBottom: 15,
  },
  infoCard: {
    borderRadius: 15,
    elevation: 2,
  },
  infoRow: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 15,
  },
  infoLabel: {
    fontSize: 16,
    color: theme.colors.text,
    marginLeft: 10,
    flex: 1,
  },
  infoValue: {
    fontSize: 16,
    fontWeight: 'bold',
    color: theme.colors.text,
    flex: 1,
    textAlign: 'right',
  },
  settingsCard: {
    borderRadius: 15,
    elevation: 2,
  },
  emergencyCard: {
    borderRadius: 15,
    elevation: 2,
  },
  emergencyItem: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 10,
  },
  emergencyText: {
    flex: 1,
    marginLeft: 15,
  },
  emergencyTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: theme.colors.text,
  },
  emergencyNumber: {
    fontSize: 14,
    color: theme.colors.text,
    opacity: 0.7,
  },
  emergencyDivider: {
    marginVertical: 10,
  },
  logoutButton: {
    borderRadius: 25,
    elevation: 2,
  },
  logoutButtonContent: {
    paddingVertical: 8,
  },
});

export default ProfileScreen;
